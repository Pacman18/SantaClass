
------------- [아웃라인] ------------------------------------------
카툰 쉐이더 

1. 모든 면의 노멀 벡터 * 두께 만큼 계산하는 노드를 만든다.
(Object 노드  * 외부 float 변수 Thickness) 

2. Object의 포지션 + 1에서 구한 노멀벡터를 더한다.
( 오브젝트의 포지션에다가 버텍스 쉐이더 처리가 되는것 )

2. Fragment쉐이터의 색깔을 Black로 변경한다.

---- 결과 앞 뒷면이 둘다 그려진다.

3. Front인지 아닌지를 확인해서 Front는 제거한다. 그렇게하면 뒷면만 검은색으로 칠해진다.

- IsFrontFace 노드 생성 후 Branch 노드에서 검사해서 결과값을 적용한다.
( 이것은 AlphaCliping 이므로 GrapInspector에서  "양면그리기" 설정 후, AlphaCliping 옵션켜줘야함 )


3에서 나온  결과값을 Fragment쉐이터의 Alpha에 연결해주면 앞면만 그려진다.

----------------[두께 조절]-----------------------------------------

4. 카메라의 View Frustum의 거리를 가져와서 가까이에있는 outLine 그림과  멀리에 있는 OutLine그림의
크기 조절을 해주는 부분을 만든다.

카메라의 View Position을 가져오고  Split 노드로 Out 시키면 
Vector4 -> RGBA로 변환된다. 
->  Z값이 View가 보는방향이고  View Space에서는 카메라가 보는 방향이 음의방향이다
그래서 -1을 곱해줘야한다  ( Multiply ) 사용


4-1 Project 행렬에서의 P[0,0]은  ATan 즉 피라미드 모형의  비율을 가져오는 행렬이라 
이것을 행렬의 첫번째 값을 가져와서  4으로 나눠줘야 비율을 적용하는 부분이다. 

4-2 거리에 따른 두께를 적용하는 연산인데 해상도를 가져와서 나눠주는 부분이 추가되었다. 

